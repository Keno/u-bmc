// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bmc.proto

package bmc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Button int32

const (
	Button_UNSPEC Button = 0
	Button_POWER  Button = 1
	Button_RESET  Button = 2
)

var Button_name = map[int32]string{
	0: "UNSPEC",
	1: "POWER",
	2: "RESET",
}

var Button_value = map[string]int32{
	"UNSPEC": 0,
	"POWER":  1,
	"RESET":  2,
}

func (x Button) String() string {
	return proto.EnumName(Button_name, int32(x))
}

func (Button) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_491517c5ad0de192, []int{0}
}

type ButtonPressRequest struct {
	// Required: which button to press
	Button Button `protobuf:"varint,1,opt,name=button,proto3,enum=bmc.Button" json:"button,omitempty"`
	// Required: duration in milliseconds for how long to press the button
	DurationMs           uint32   `protobuf:"varint,2,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonPressRequest) Reset()         { *m = ButtonPressRequest{} }
func (m *ButtonPressRequest) String() string { return proto.CompactTextString(m) }
func (*ButtonPressRequest) ProtoMessage()    {}
func (*ButtonPressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_491517c5ad0de192, []int{0}
}
func (m *ButtonPressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonPressRequest.Unmarshal(m, b)
}
func (m *ButtonPressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonPressRequest.Marshal(b, m, deterministic)
}
func (m *ButtonPressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonPressRequest.Merge(m, src)
}
func (m *ButtonPressRequest) XXX_Size() int {
	return xxx_messageInfo_ButtonPressRequest.Size(m)
}
func (m *ButtonPressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonPressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonPressRequest proto.InternalMessageInfo

func (m *ButtonPressRequest) GetButton() Button {
	if m != nil {
		return m.Button
	}
	return Button_UNSPEC
}

func (m *ButtonPressRequest) GetDurationMs() uint32 {
	if m != nil {
		return m.DurationMs
	}
	return 0
}

type ButtonPressResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonPressResponse) Reset()         { *m = ButtonPressResponse{} }
func (m *ButtonPressResponse) String() string { return proto.CompactTextString(m) }
func (*ButtonPressResponse) ProtoMessage()    {}
func (*ButtonPressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_491517c5ad0de192, []int{1}
}
func (m *ButtonPressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonPressResponse.Unmarshal(m, b)
}
func (m *ButtonPressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonPressResponse.Marshal(b, m, deterministic)
}
func (m *ButtonPressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonPressResponse.Merge(m, src)
}
func (m *ButtonPressResponse) XXX_Size() int {
	return xxx_messageInfo_ButtonPressResponse.Size(m)
}
func (m *ButtonPressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonPressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonPressResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ButtonPressRequest)(nil), "bmc.ButtonPressRequest")
	proto.RegisterType((*ButtonPressResponse)(nil), "bmc.ButtonPressResponse")
	proto.RegisterEnum("bmc.Button", Button_name, Button_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ManagementServiceClient is the client API for ManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagementServiceClient interface {
	PressButton(ctx context.Context, in *ButtonPressRequest, opts ...grpc.CallOption) (*ButtonPressResponse, error)
}

type managementServiceClient struct {
	cc *grpc.ClientConn
}

func NewManagementServiceClient(cc *grpc.ClientConn) ManagementServiceClient {
	return &managementServiceClient{cc}
}

func (c *managementServiceClient) PressButton(ctx context.Context, in *ButtonPressRequest, opts ...grpc.CallOption) (*ButtonPressResponse, error) {
	out := new(ButtonPressResponse)
	err := c.cc.Invoke(ctx, "/bmc.ManagementService/PressButton", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagementServiceServer is the server API for ManagementService service.
type ManagementServiceServer interface {
	PressButton(context.Context, *ButtonPressRequest) (*ButtonPressResponse, error)
}

func RegisterManagementServiceServer(s *grpc.Server, srv ManagementServiceServer) {
	s.RegisterService(&_ManagementService_serviceDesc, srv)
}

func _ManagementService_PressButton_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ButtonPressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagementServiceServer).PressButton(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bmc.ManagementService/PressButton",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagementServiceServer).PressButton(ctx, req.(*ButtonPressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManagementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bmc.ManagementService",
	HandlerType: (*ManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PressButton",
			Handler:    _ManagementService_PressButton_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bmc.proto",
}

func init() { proto.RegisterFile("bmc.proto", fileDescriptor_491517c5ad0de192) }

var fileDescriptor_491517c5ad0de192 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xca, 0x4d, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xca, 0x4d, 0x56, 0x8a, 0xe2, 0x12, 0x72, 0x2a,
	0x2d, 0x29, 0xc9, 0xcf, 0x0b, 0x28, 0x4a, 0x2d, 0x2e, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x52, 0xe6, 0x62, 0x4b, 0x02, 0x8b, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0x71, 0xeb,
	0x81, 0xb4, 0x41, 0x14, 0x06, 0x41, 0xa5, 0x84, 0xe4, 0xb9, 0xb8, 0x53, 0x4a, 0x8b, 0x12, 0x4b,
	0x32, 0xf3, 0xf3, 0xe2, 0x73, 0x8b, 0x25, 0x98, 0x14, 0x18, 0x35, 0x78, 0x83, 0xb8, 0x60, 0x42,
	0xbe, 0xc5, 0x4a, 0xa2, 0x5c, 0xc2, 0x28, 0x66, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x6a, 0x69,
	0x71, 0xb1, 0x41, 0x84, 0x85, 0xb8, 0xb8, 0xd8, 0x42, 0xfd, 0x82, 0x03, 0x5c, 0x9d, 0x05, 0x18,
	0x84, 0x38, 0xb9, 0x58, 0x03, 0xfc, 0xc3, 0x5d, 0x83, 0x04, 0x18, 0x41, 0xcc, 0x20, 0xd7, 0x60,
	0xd7, 0x10, 0x01, 0x26, 0xa3, 0x70, 0x2e, 0x41, 0xdf, 0xc4, 0xbc, 0xc4, 0xf4, 0xd4, 0xdc, 0xd4,
	0xbc, 0x92, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x27, 0x2e, 0x6e, 0xb0, 0x89, 0x50,
	0x53, 0xc4, 0x91, 0x1c, 0x87, 0xec, 0x0b, 0x29, 0x09, 0x4c, 0x09, 0x88, 0x13, 0x94, 0x18, 0x92,
	0xd8, 0xc0, 0x61, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xff, 0xc0, 0x64, 0x10, 0x01,
	0x00, 0x00,
}
